---
import type { GetStaticPaths } from "astro";
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

// Import all images and load their metadata asynchronously
const images = import.meta.glob<{ default: ImageMetadata }>('/src/galleryImages/*.{jpeg,jpg,png,gif}');
const imageMetadata = await Promise.all(
  Object.values(images).map(async (imageImport) => await imageImport())
);
---

<section class="portfolio-bg" id="portfolio">

  <div class="portfolioTop">
    <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none">
      <path d="M598.97 114.72L0 0 0 120 1200 120 1200 0 598.97 114.72z" class="shape-fill"></path>
    </svg>
  </div>

  <h3 class="light">Portfolio</h3>

  <div class="portfolioStream">
    {imageMetadata.map((image, index) => (
      <div class="portfolioSlide">
        <Image class="image" src={image.default} alt={`Gallery Image ${index + 1}`} />
      </div>
    ))}
  </div>

  <div class="portfolioBottom">
    <svg data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 120" preserveAspectRatio="none">
      <path d="M598.97 114.72L0 0 0 120 1200 120 1200 0 598.97 114.72z" class="shape-fill"></path>
    </svg>
  </div>

</section>

<div id="modal" class="modal">
  <div class="modalContent">
    <img id="modalImg" class="modalImg" />
    <button id="next"><img src="src/svg/arrow_back.svg" style="rotate: 180deg;" alt=""></button>
    <button id="prev"><img src="src/svg/arrow_back.svg" alt=""></button>
    <button id="close"><img src="src/svg/arrow_back.svg" style="rotate: 270deg;" alt=""></button>
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Host+Grotesk:ital,wght@0,300..800;1,300..800&display=swap');

  .portfolioTop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
  }

  .portfolioTop svg {
    position: relative;
    display: block;
    width: calc(152% + 1.3px);
    height: 20px;
  }

  .portfolioTop .shape-fill {
    fill: #BDD9E5;
  }

  .portfolioBottom {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
  }

  .portfolioBottom svg {
    position: relative;
    display: block;
    width: calc(152% + 1.3px);
    height: 20px;
    transform: translateY(1px);
  }

  .portfolioBottom .shape-fill {
    fill: #BDD9E5;
  }


  h3 {
    font-size: 2rem;
    font-family: "Host Grotesk", sans-serif;
    font-optical-sizing: auto;
    font-weight: <weight>;
    font-style: normal;
    letter-spacing: 2px;
    margin-bottom: var(--space-l);
    text-align: center;
    line-height: 1;
  }

  .light{
    color: var(--clr-font-light)
  }

  .portfolio-bg {
    background-color: var(--clr-bg-dark-full);
    padding: 10vh 0;
  }

  .portfolioStream {
    position: relative;
    column-count: 7;
    gap: 0;
    grid-auto-flow: dense;
  }

  .image {
    padding: 0.5rem 0.5rem;
    border-radius: 16px;
    transition: 250ms;
  }

  .image:hover {
    cursor: zoom-in;
    scale: 1.1;
  }

  .modal {
    display: none; /* Hide initially */
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(234, 235, 230, 0.8); /* Semi-transparent background */
    justify-content: center;
    align-items: center;
    z-index: 90;
  }

  .modalContent {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100vw;
    height: 100vh;
  }

  .modalImg {
    max-width: 80%;
    max-height: 80%;
    object-fit: contain;
    position: relative;
    margin: auto;
  }

  .no-scroll {
    overflow: hidden;
  }

  #next {
    position: absolute;
    right: 2%;
    top: 50%;
    transform: translateY(-50%)
  }

  #prev {
    position: absolute;
    left: 2%;
    top: 50%;
    transform: translateY(-50%)
  }

  #close {
    position: absolute;
    bottom: 0%;
    font-size: 4rem;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    text-shadow: 1px 1px 4px black, -1px -1px 4px black;
  }

  .arrow {
    font-weight: 900;
    font-size: 3rem;
  }

</style>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);


  const images = document.querySelectorAll('.image');
  const modal = document.getElementById('modal');
  const modalImg = document.getElementById('modalImg') as HTMLImageElement;
  const close = document.getElementById('close');
  const next = document.getElementById('next');
  const prev = document.getElementById('prev');
  let currentIndex = 0;


  images.forEach((img, index) => {
    img.addEventListener('click', (e) => {
      e.preventDefault();
      const target = e.target as HTMLImageElement;

      modalImg.src = target.src;

      currentIndex = index;

      modal.style.display = 'flex';

      document.body.style.overflow = 'hidden';
    })
  })

  close.addEventListener('click', (e) => {
    modal.style.display = 'none';

    document.body.style.overflow = '';
  })

  next.addEventListener('click', (e) => {
    currentIndex++;
    if (currentIndex >= (images.length - 1)) {
      currentIndex = 0;
    }
    const nextImage = images[currentIndex];
    const modalImg = document.getElementById('modalImg');
    modalImg.src = nextImage.src;
  })

  prev.addEventListener('click', (e) => {
    currentIndex--;
    if (currentIndex <= 0) {
      currentIndex = images.length - 1;
    }
    const prevImage = images[currentIndex];
    const modalImg = document.getElementById('modalImg');
    modalImg.src = prevImage.src;
  })

  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.style.display = 'none';

      document.body.style.overflow = '';
    }
  })



  gsap.from(".portfolio-bg", {
    scrollTrigger: {
    trigger: ".portfolio-bg",
    start: "top 80%",
    },
    stagger: {
      each: 0.5,
    },
    duration: 3,
    opacity: 0,
    y: "5rem",
    ease: "power4.out",

  });

</script>
