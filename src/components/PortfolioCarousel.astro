---
import { getImage } from 'astro:assets';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/galleryImages/*.{jpeg,jpg,png,gif}', { eager: true });

// Erstelle die Thumbnails mit `await getImage`
const thumbnails = await Promise.all(Object.entries(images).map(async ([path, image]) => {
  // Dateinamen extrahieren und formatieren
  const filename = path.split('/').pop()?.split('.')[0]?.replace(/[-_]/g, ' ') || 'Galeriebild';
  const altText = filename.charAt(0).toUpperCase() + filename.slice(1); // Erstes Wort groß

  return {
    thumb: (await getImage({ src: image.default, width: 300, format: 'webp' })).src,
    fullsize: (await getImage({ src: image.default, width: 1000, format: 'webp' })).src,
    alt: altText
  };
}));
---

<section class="portfolio-bg" id="portfolio">
  <h2 class="light">Portfolio</h2>
  <div class="portfolioStream">
    {thumbnails.length > 0 && thumbnails.map((image, index) => (
      <div class="portfolioSlide" key={index}>
        <img
          class="image"
          src={image.thumb}
          width="300"
          height="200"
          alt={image.alt}
          data-index={index}
          data-fullsize={image.fullsize}
        />
      </div>
    ))}
  </div>
</section>

<div id="modal" class="modal">
  <div class="modalContent">
    <img id="modalImg" class="modalImg" />
    <button id="next"><img src="/svg/arrow_back.svg" style="rotate: 180deg;" alt="Nächstes Bild" id="nextImg"></button>
    <button id="prev"><img src="/svg/arrow_back.svg" alt="Vorheriges Bild"  id="prevImg"></button>
    <button id="close"><img src="/svg/arrow_back.svg" style="rotate: 270deg;" alt="Galerie schließen" id="closeImg"></button>
  </div>
</div>

<style>

  .light{
    color: var(--clr-font-light)
  }

  .portfolio-bg {
    background-color: var(--clr-bg-dark-full);
    padding: 2vh 0 6vh;
  }

  .portfolioStream {
    position: relative;
    column-count: 7;
    gap: 0;
    grid-auto-flow: dense;
  }

  .image {
    padding: 0.5rem 0.5rem;
    border-radius: 16px;
    transition: 250ms;
  }

  .image:hover {
    cursor: zoom-in;
    scale: 1.1;
  }

  .modal {
    display: none; /* Hide initially */
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(234, 235, 230, 0.8); /* Semi-transparent background */
    justify-content: center;
    align-items: center;
    z-index: 90;
  }

  .modalContent {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100vw;
    height: 100vh;
  }

  .modalImg {
    max-width: 80%;
    max-height: 80%;
    object-fit: contain;
    position: relative;
    margin: auto;
  }

  .no-scroll {
    overflow: hidden;
  }

  #next {
    position: absolute;
    right: 2%;
    top: 50%;
    transform: translateY(-50%)
  }

  #prevImg:hover,
  #nextImg:hover,
  #closeImg:hover {
    transition: scale 125ms ease-in-out;
  }

  #prevImg:hover,
  #nextImg:hover,
  #closeImg:hover {
    scale: 1.2;
  }

  #prev {
    position: absolute;
    left: 2%;
    top: 50%;
    transform: translateY(-50%)
  }

  #close {
    position: absolute;
    bottom: 0%;
    font-size: 4rem;
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    text-shadow: 1px 1px 4px black, -1px -1px 4px black;
  }

  .arrow {
    font-weight: 900;
    font-size: 3rem;
  }


  @media only screen and (max-width:768px) {
    .portfolioStream {
      column-count: 5;
    }
  }

  @media only screen and (max-width:430px) {
    .portfolioStream {
      column-count: 3;
    }
  }

</style>

<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);


  const images = document.querySelectorAll('.image');
  const modal = document.getElementById('modal');
  const modalImg = document.getElementById('modalImg') as HTMLImageElement;
  const close = document.getElementById('close');
  const next = document.getElementById('next');
  const prev = document.getElementById('prev');
  const prevImg = document.getElementById('prevImg');
  const nextImg = document.getElementById('nextImg');

  let currentIndex = 0;

  const thumbnails = Array.from(document.querySelectorAll('.image'));

  thumbnails.forEach((img, index) => {
    img.addEventListener('click', (e) => {
      e.preventDefault();

      const fullsizeUrl = img.getAttribute('data-fullsize'); // Hier den Pfad holen

      console.log("Loading fullsize image:", fullsizeUrl);

      modalImg.src = fullsizeUrl; // Das Bild setzen
      currentIndex = index;

      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    });
  });

  close.addEventListener('click', (e) => {
    modal.style.display = 'none';

    document.body.style.overflow = '';
  })

  next.addEventListener('click', () => {
    currentIndex = (currentIndex + 1) % thumbnails.length;
    const nextImage = thumbnails[currentIndex];
    modalImg.src = nextImage.getAttribute('data-fullsize');
  });

  prev.addEventListener('click', () => {
    currentIndex = (currentIndex - 1 + thumbnails.length) % thumbnails.length;
    const prevImage = thumbnails[currentIndex];
    modalImg.src = prevImage.getAttribute('data-fullsize');
  });

  modal.addEventListener('click', (e) => {
    if (e.target !== modalImg && e.target !== prevImg && e.target !==prev && e.target !== nextImg && e.target !==next) {
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }
  })

  gsap.from(".portfolio-bg", {
    scrollTrigger: {
    trigger: ".portfolio-bg",
    start: "top 80%",
    },
    stagger: {
      each: 0.5,
    },
    duration: 3,
    opacity: 0,
    y: "5rem",
    ease: "power4.out",

  });

</script>
